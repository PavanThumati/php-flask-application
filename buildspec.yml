version: 0.2

env:
  variables:
    DB_USERNAME: admin
    DB_PASSWORD: adminadmin
    CLUSTER_NAME: eks-cluster
    AWS_REGION: us-east-1
    AWS_ACCOUNT_ID: 047719630685
    BACKEND_IMAGE_REPO: app-tier-image
    FRONTEND_IMAGE_REPO: web-toer-image

phases:
  install:
    runtime-versions:
      docker: 18
    commands:
      - echo Installing envsubst...
      - yum install -y gettext
      - echo Installing kubectl...
      - curl -LO "https://dl.k8s.io/release/v1.29.0/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
      - echo Installing AWS CLI...
      - pip install --upgrade awscli

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
      - echo Fetching RDS endpoint...
      - export RDS_ENDPOINT=$(aws rds describe-db-instances --query "DBInstances[?DBName=='mydb'].Endpoint.Address" --output text --region $AWS_REGION)
      - echo RDS_ENDPOINT=$RDS_ENDPOINT

  build:
    commands:
      - echo "Building and tagging frontend..."
      - cd Application-Code/frontend
      - docker build -t ${FRONTEND_IMAGE_REPO}:${IMAGE_TAG} .
      - docker tag ${FRONTEND_IMAGE_REPO}:${IMAGE_TAG} ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${FRONTEND_IMAGE_REPO}:${IMAGE_TAG}
      - cd -

      - echo "Building and tagging backend..."
      - cd Application-Code/backend
      - docker build -t ${BACKEND_IMAGE_REPO}:${IMAGE_TAG} .
      - docker tag ${BACKEND_IMAGE_REPO}:${IMAGE_TAG} ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${BACKEND_IMAGE_REPO}:${IMAGE_TAG}
      - cd -

  post_build:
    commands:
      - echo "Pushing frontend image..."
      - docker push ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${FRONTEND_IMAGE_REPO}:${IMAGE_TAG}

      - echo "Pushing backend image..."
      - docker push ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${BACKEND_IMAGE_REPO}:${IMAGE_TAG}

      - echo "Updating Kubernetes manifest files with image URIs..."
      - mkdir -p k8s-out
      
      - sed "s|IMAGE_URI_FRONTEND|${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${FRONTEND_IMAGE_REPO}:${IMAGE_TAG}|g" Kubernetes-Manifests-file/frontend-deployment.yaml > k8s-out/frontend-deployment.yaml
      - cp Kubernetes-Manifests-file/frontend-service.yaml k8s-out/

      - sed "s|IMAGE_URI_BACKEND|${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${BACKEND_IMAGE_REPO}:${IMAGE_TAG}|g" Kubernetes-Manifests-file/backend-deployment.yaml > k8s-out/backend-deployment.yaml
      - cp Kubernetes-Manifests-file/backend-service.yaml k8s-out/

      - cp Kubernetes-Manifests-file/ingress.yaml k8s-out/ || echo "No ingress.yaml found"
      - cp Kubernetes-Manifests-file/namespace.yaml k8s-out/

artifacts:
  base-directory: k8s-out
  files:
    - namespace.yaml
    - frontend-deployment.yaml
    - backend-deployment.yaml
    - frontend-service.yaml
    - backend-service.yaml
    - ingress.yaml
